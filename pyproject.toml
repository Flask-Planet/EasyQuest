[project]
name = "EasyQuest"
version = "1.0.0"
description = "Create adventures for you and your friends!"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "pytz",
    "flask",
    "flask-imp",
    "flask-sqlalchemy",
    "python-dotenv",
    "requests",
    "pyqwe",
    "websockets",
    "loguru",
]

[project.optional-dependencies]
production = [
    "gunicorn",
    "supervisor",
]
development = [
    "watchdog[watchmedo]",
]

[tool.ruff]
line-length = 80
indent-width = 4
ignore = ["F403", "F405"]

[tool.pyqwe]
compile-main = "*:uv pip compile pyproject.toml -o requirements/main.txt"
compile-production = "*:uv pip compile pyproject.toml --extra production -o requirements/production.txt"
docker-build-base = "*:docker build -f Dockerfile-base -t easyquest-base ."
docker-compose = "*:docker compose up -d --build"
web = "*:flask run --debug"
websockets = "*:python3 -m app.websockets_"
websockets_reload = """*:
watchmedo auto-restart \
--pattern "*.py" \
--recursive \
--signal SIGTERM \
python3 app websockets"""
tailwindcss = """*:\
npx tailwindcss \
-c ./configs/tailwind.config.js \
-i ./tailwindcss/_.css \
-o ./app/web_/resources/static/css/index.css \
--watch"""
dev_stack = [
    "*:flask run --debug",
    """*:npx tailwindcss -c ./configs/tailwind.config.js \
    -i ./tailwindcss/_.css -o ./app/web_/resources/static/css/index.css \
    --watch""",
    """*:watchmedo auto-restart \
    --pattern "*.py" \
    --recursive \
    --signal SIGTERM \
    python3 app websockets"""
]
uv_compile = [
    "*:uv pip compile pyproject.toml -o requirements/development.txt --extra development",
    "*:uv pip compile pyproject.toml -o requirements/production.txt --extra production",
    "*:uv pip compile pyproject.toml -o requirements/main.txt"
]
